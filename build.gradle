plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.11'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.magambell'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // aws
    implementation 'com.amazonaws:aws-java-sdk-ses:1.12.664'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.691'

    // db
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // apple jwt 관련
    implementation 'com.nimbusds:nimbus-jose-jwt:9.38'

    // fcm
    implementation 'com.google.firebase:firebase-admin:9.5.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

// FROM 디렉토리 설정 (querydsql)
def querydslDir = "src/main/generated"

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

sourceSets {
    main {
        java {
            srcDirs += querydslDir
        }
    }
}

clean {
    delete file(querydslDir)
}
